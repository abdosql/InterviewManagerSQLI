classDiagram
    class Client {
        +sendHttpRequest()
    }

    class NewCommand {
        +string candidateId
        +string evaluatorId
        +DateTimeImmutable dateTime
        +string location
    }

    class ScheduleInterviewCommand {
        +int candidateId
        +int evaluatorId
        +DateTimeImmutable dateTime
        +string location
    }

    class CommandHandler {
        +void __invoke(NewCommand $command)
        +persistData()
        +dispatchEvent()
    }

    class InterviewScheduledEvent {
        +int interviewId
        +int candidateId
        +int evaluatorId
        +string dateTime
        +string location
        +string status
    }

    class EventHandler {
        +void __invoke(Event $event)
        +updateMongoDB()
    }

    class EntityManager {
        +persist()
        +flush()
        +getReference()
    }

    class DocumentManager {
        +persist()
        +flush()
    }

    class MessageBus {
        +dispatch()
    }

    class RabbitMQ {
        +publish()
        +consume()
    }

    Client : +sendHttpRequest()
    Client --> NewCommand : HTTP Request
    NewCommand --> ScheduleInterviewCommand : Create Command
    ScheduleInterviewCommand --> CommandHandler : Command
    CommandHandler : +persistData()
    CommandHandler : +dispatchEvent()
    CommandHandler --> EntityManager : Persist
    CommandHandler --> MessageBus : Dispatch Event
    MessageBus --> RabbitMQ : Publish
    RabbitMQ --> MessageBus : Consume
    MessageBus --> EventHandler : Handle Event
    EventHandler : +updateMongoDB()

    class Event {
        +string interviewId
        +string candidateName
        +string evaluatorName
        +string dateTime
        +string location
        +string status
    }

    class Interview {
        +int id
        +Candidate candidate
        +Evaluator evaluator
        +DateTime dateTime
        +string location
        +string status
    }

    class Candidate {
        +int id
        +string name
        +string email
    }

    class Evaluator {
        +int id
        +string name
        +string email
    }

    class InterviewRepository {
        +findByCandidate()
        +findAll()
    }

    class InterviewReadModel {
        +string id
        +string candidateName
        +string evaluatorName
        +DateTime dateTime
        +string location
        +string status
    }

    class InterviewReadModelRepository {
        +findByCandidate()
        +findAll()
    }

    Client : -HTTP Request
    NewCommand : -Create Command
    ScheduleInterviewCommand : -Command
    CommandHandler : -Persist
    CommandHandler : -Dispatch Event
    MessageBus : -Publish
    RabbitMQ : -Consume
    MessageBus : -Handle Event
    EventHandler : -Update
